{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","item","clearGoods","showSelectedGoods","length","toString","endsWith","slice","join","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAc,CACZC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,SAAS,CAAEH,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,O,EAGpDE,WAAa,SAACF,GACZ,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,SAAS,CAAEH,cAAeA,EAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,Q,EAGvEK,WAAa,WACX,EAAKJ,SAAS,CAAEH,cAAe,M,EAGjCQ,kBAAoB,WAClB,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,OACET,EAAcU,WAAWC,SAAS,KAAlC,UACOX,EAAc,GADrB,2BAEOA,EAAc,GAFrB,gBAKJ,QACE,MAAM,GAAN,OACKA,EAAcY,MAAM,GAAI,GACxBC,KAAK,MAFV,0CAIMb,EAAcA,EAAcS,OAAS,GAJ3C,gC,4CAUN,WAAU,IAAD,OACCT,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACGf,EAAcS,OAAS,GACtB,wBACEO,KAAK,SACLC,QAASH,KAAKP,WACdQ,UAAU,iCAHZ,uBAQF,oBAAIA,UAAU,oBAAd,SACGD,KAAKN,yBAIV,oBAAIO,UAAU,iBAAd,SACGlB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,qBAEEa,UAAS,8BACPf,EAAcmB,SAASjB,GACnB,6BACA,IALR,UAQE,+BAAOA,IACP,wBACEa,UAAU,cACVC,KAAK,SACLC,QACEjB,EAAcmB,SAASjB,GACnB,kBAAM,EAAKE,WAAWF,IACtB,kBAAM,EAAKD,QAAQC,IAN3B,SASGF,EAAcmB,SAASjB,GACpB,SACA,UAnBDA,e,GArEDkB,IAAMC,WAkGTvB,ICnHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.88409136.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state:State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  };\n\n  removeGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: selectedGoods.filter(item => item !== good) });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return (\n          selectedGoods.toString().endsWith('s')\n            ? `${selectedGoods[0]} are selected`\n            : `${selectedGoods[0]} is selected`\n        );\n\n      default:\n        return (\n          `${selectedGoods.slice(0, -1)\n            .join(', ')}\n            and\n            ${selectedGoods[selectedGoods.length - 1]}\n            are selected`\n        );\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              onClick={this.clearGoods}\n              className=\"App__button App__button--clear\"\n            >\n              Clear all\n            </button>\n          )}\n          <h1 className=\"App__header-title\">\n            {this.showSelectedGoods()}\n          </h1>\n        </div>\n\n        <ul className=\"App__goodsList\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={`App__goodsList-item ${\n                selectedGoods.includes(good)\n                  ? 'App__goodsList-item--added'\n                  : ''\n              }`}\n            >\n              <span>{good}</span>\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={\n                  selectedGoods.includes(good)\n                    ? () => this.removeGood(good)\n                    : () => this.addGood(good)\n                }\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}